apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.ingress.annotations .Values.commonAnnotations }}
  name: opencti
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: opencti
  strategy: {}
  {{- if .Values.affinity }}
  affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
  {{- else }}
  affinity:
      podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
      podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
      nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
  {{- end }}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose.yml convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: opencti
    spec:
      containers:
        - env:
            - name: APP__ADMIN__EMAIL
              value: {{ .Values.opencti.APP__ADMIN__EMAIL }}
            - name: APP__ADMIN__PASSWORD
              value: {{ .Values.opencti.APP__ADMIN__PASSWORD }}
            - name: APP__ADMIN__TOKEN
              value: {{ .Values.opencti.APP__ADMIN__TOKEN }}
            - name: APP__APP_LOGS__LOGS_LEVEL
              value: {{ .Values.opencti.APP__APP_LOGS__LOGS_LEVEL }}
            - name: APP__BASE_URL
              value: {{ .Values.opencti.APP__BASE_URL}}
            - name: APP__PORT
              value: "{{ .Values.opencti.APP__PORT}}"
            - name: ELASTICSEARCH__URL
              value: {{ .Values.opencti.ELASTICSEARCH__URL }}
            - name: MINIO__ACCESS_KEY
              value: {{ .Values.opencti.MINIO__ACCESS_KEY }}
            - name: MINIO__ENDPOINT
              value: {{ .Values.opencti.MINIO__ENDPOINT }}
            - name: MINIO__PORT
              value: "{{ .Values.opencti.MINIO__PORT }}"
            - name: MINIO__SECRET_KEY
              value: {{ .Values.opencti.MINIO__SECRET_KEY }}
            - name: MINIO__USE_SSL
              value: "{{ .Values.opencti.MINIO__USE_SSL }}"
            - name: NODE_OPTIONS
              value: {{ .Values.opencti.NODE_OPTIONS }}
            - name: PROVIDERS__LOCAL__STRATEGY
              value: {{ .Values.opencti.PROVIDERS__LOCAL__STRATEGY }}
            - name: RABBITMQ__HOSTNAME
              value: {{ .Values.opencti.RABBITMQ__HOSTNAME }}
            - name: RABBITMQ__MANAGEMENT_SSL
              value: "{{ .Values.opencti.RABBITMQ__MANAGEMENT_SSL }}"
            - name: RABBITMQ__PASSWORD
              value: {{ .Values.opencti.RABBITMQ__PASSWORD }}
            - name: RABBITMQ__PORT
              value: "{{ .Values.opencti.RABBITMQ__PORT }}"
            - name: RABBITMQ__PORT_MANAGEMENT
              value: "{{ .Values.opencti.RABBITMQ__PORT_MANAGEMENT }}"
            - name: RABBITMQ__USERNAME
              value: {{ .Values.opencti.RABBITMQ__USERNAME }}
            - name: REDIS__HOSTNAME
              value: {{ .Values.opencti.REDIS__HOSTNAME }}
            - name: REDIS__PORT
              value: "{{ .Values.opencti.REDIS__PORT }}"
            - name: SMTP__HOSTNAME
              value: {{ .Values.opencti.SMTP__HOSTNAME }}
            - name: SMTP__PORT
              value: "{{ .Values.opencti.SMTP__PORT }}"
          image: {{ .Values.image.repository }}
          name: opencti
          ports:
            - containerPort: {{ .Values.containerPorts.http }}
          resources: {}
      restartPolicy: Always
    {{- if .Values.tolerations }}
    tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
    {{- end }}
status: {}